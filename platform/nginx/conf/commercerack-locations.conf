
	
		uwsgi_temp_path     /local/nginx/tmp;
		proxy_temp_path		/local/nginx/tmp;

		open_log_file_cache max=256 inactive=20s min_uses=2 valid=1m;
		open_file_cache max=1000 inactive=300s; 
		open_file_cache_valid    300s; 
		open_file_cache_min_uses 2;
		open_file_cache_errors   on;
	
		access_log		logs/nginx-access.log main;
		error_log		logs/nginx-error.log;

		uwsgi_modifier1 5;
		include uwsgi_params;

		set $OUR_HOSTTYPE $HOSTTYPE;
		set $OUR_USERNAME $USERNAME;

		location / {
			index index.html;
			default_type text/html;

			add_header	X-USERNAME $OUR_USERNAME;
			add_header  X-HOSTTYPE $OUR_HOSTTYPE;
	
			access_log logs/nginx-access.log;
			error_log  logs/nginx-error.log;

			if ($server_port = 9000) {
				## port 9000 is always admin
				## NOTE: if http_proxy is used then it's http_x_server_port
				set $OUR_HOSTTYPE "ADMIN";
				}

			if ($OUR_HOSTTYPE = "APPTIMIZER") {
				# EVENTUALLY:
				#	## error_page 404	@app_hosting;
				#	## alias $TARGETPATH/index.html#!error_404;
				#	root $TARGETPATH;				expires 24h;
				uwsgi_pass 	 upstream-apptimizer-uwsgi;
				break;
				}

			if ($OUR_HOSTTYPE = "VSTORE") {
				uwsgi_pass   upstream-vstore-uwsgi;
				break;
				}

			if ($OUR_HOSTTYPE = "VSTORE-APP") {
				uwsgi_pass   upstream-vstore-uwsgi;
				break;
				}

			if ($OUR_HOSTTYPE = "MEDIA") {
				uwsgi_pass	 upstream-media-uwsgi;
				break;
				}

			if ($OUR_HOSTTYPE = "REDIR") {
				return 301 $TARGETPATH;
				break;
				}

			if ($OUR_HOSTTYPE = 'ADMIN') {
				expires 24h;
				rewrite ^/$	https://$host:9000/latest/admin.html?$args&$DATETIME redirect;
				root /httpd/static/zmvc;
				}

			}

		#location = /__HEALTH__ {
		#	check_status;
		#	access_log   off;
		#	}

		location = /__health__ {
			perl CommerceRackNginxHandlers::health_handler;
			access_log   off;
			break;
			}

		#location ~ ^/app/ {
		#	root /httpd/static/zmvc/;
		#	}

		location ^~ /webapi/ {
			if ($OUR_HOSTTYPE = "MEDIA") {
				## not allowed.
				}

			sendfile off;
			client_body_buffer_size  16K;
			client_max_body_size 16m;			## anysize is cool for file uploads (can be set to 0)
			#proxy_pass	http://upstream-vstore-httpd;
			#proxy_read_timeout	360;
			#proxy_connect_timeout 100;
			uwsgi_pass   upstream-webapi-uwsgi;

			gzip_types	application/xml text/javascript text/css text/xml;
			}

		location ~ ^/jsonapi/ws/ {
			uwsgi_pass  unix:///var/run/uwsgi-jsonapi-ws.sock;
			include uwsgi_params;
			uwsgi_modifier1 5;
			}

		location ~ ^/(jsonapi|jquery)/ {
			if ($OUR_HOSTTYPE = "MEDIA") {
				## not allowed.
				}
			sendfile off;
			client_max_body_size 16m;			## anysize is cool for file uploads (can be set to 0)

			access_log logs/nginx-$OUR_USERNAME-jsonapi.log;
			error_log  logs/nginx-$OUR_USERNAME-jsonapi-error.log;

			uwsgi_pass   upstream-jsonapi-uwsgi;
		
			gzip on;
			gzip_disable "MSIE [1-6].(?!.*SV1)";
			gzip_vary on;
			gzip_types	text/javascript text/css text/xml text/json application/json;
			gzip_proxied	any;
			}

		location ~ ^/jsonapi/ws/ {
			sendfile off;
			client_max_body_size 16m;			## anysize is cool for file uploads (can be set to 0)

			access_log logs/nginx-$OUR_USERNAME-jsonapi-ws.log;
			error_log  logs/nginx-$OUR_USERNAME-jsonapi-ws-error.log;

			uwsgi_pass   upstream-jsonapi-ws-uwsgi;
		
			gzip on;
			gzip_disable "MSIE [1-6].(?!.*SV1)";
			gzip_vary on;
			gzip_types	text/javascript text/css text/xml text/json application/json;
			gzip_proxied	any;
			}

		location ^~ /media/ {
			## all other media files can be served from here:
			alias /httpd/static/;
			sendfile on;
			gzip off;
			expires max;
			add_header Cache-Control public;

			access_log logs/nginx-$OUR_USERNAME-media.log;
			error_log  logs/nginx-$OUR_USERNAME-media-error.log;

			location	~	^/media/(rss|kount)/.*$ {
				## semi-dynamic content -- no local caching
  		   	uwsgi_pass  upstream-media-uwsgi;
				}

			location	~	^/media/(img|merchant)/.*$ {
		     	uwsgi_pass  upstream-media-uwsgi;
  		   	include uwsgi_params;
  		   	uwsgi_modifier1 5;
	
				uwsgi_cache media;
				uwsgi_cache_key $host$request_uri;
				uwsgi_cache_use_stale   updating timeout invalid_header error;
				uwsgi_cache_valid  200 302  24h;
				uwsgi_cache_valid  301 404  10m;
				add_header X-NginxCache-Status $upstream_cache_status;
				gzip_types  application/x-javascript text/javascript text/css;
				gzip_proxied   any;
				}

		   location ~ ^/media/graphics/navbuttons/.*$ {
  				root  /local/navbuttons;
		      error_page  404 = @uwsgi_button_makesave;
				gzip off;
	    		}
			}

	 	## legacy dynamic buttons
		location @uwsgi_button_makesave {
			internal;
			uwsgi_pass  upstream-media-uwsgi;
	  	 	include uwsgi_params;
  		 	uwsgi_modifier1 5;

			uwsgi_store         on;
			uwsgi_store_access  user:rw group:rw all:r;
			root  /local/navbuttons;
			gzip_types	application/x-javascript text/javascript text/css;
			}

